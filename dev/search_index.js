var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SpikingRNNs","category":"page"},{"location":"#SpikingRNNs","page":"Home","title":"SpikingRNNs","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SpikingRNNs.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SpikingRNNs]","category":"page"},{"location":"#SpikingRNNs.bin_spikes-Union{Tuple{R}, Tuple{Vector{R}, R, R}} where R","page":"Home","title":"SpikingRNNs.bin_spikes","text":"bin_spikes(Y::Vector{R},dt::R,Tmax::R) where R\n\nGiven a vector of spiketimes Y, return a vector of counts, with intervals 0:dt:Tmax. So that count length is Tmax/dt. Ignores event times larger than Tmax \n\n\n\n\n\n","category":"method"},{"location":"#SpikingRNNs.covariance_self_numerical_old-Union{Tuple{R}, Tuple{Vector{R}, R, R}, Tuple{Vector{R}, R, R, Union{Nothing, R}}} where R","page":"Home","title":"SpikingRNNs.covariance_self_numerical_old","text":"covariance_self(Y::Vector{R},τmax::R,dt::R,Tmax::R) where R\n\nGiven a vector of spiketimes Y, first it bins spike counts with intervals 0:dt:Tmax, then it computes the self-covariance density for intervals  0:dt:τmax (with  dt<<τmax<<Tmax )\n\n\n\n\n\n","category":"method"},{"location":"#SpikingRNNs.lognorm_reparametrize-Tuple{Real, Real}","page":"Home","title":"SpikingRNNs.lognorm_reparametrize","text":"    lognorm_reparametrize(m,std) -> distr::LogNormal\n\nparameters\n\nm   sample mean\nstd sample std\n\n\n\n\n\n","category":"method"},{"location":"#SpikingRNNs.send_signal!-Tuple{Real, SpikingRNNs.ConnectionRate}","page":"Home","title":"SpikingRNNs.send_signal!","text":"send_signal(conn::ConnectionStateRate)\n\nComputes the input to postsynaptic population, given the current state of presynaptic population. For a rate model, it applies the iofunction to the neuron potentials, gets the rate values then multiplies rates by weights, adding the result to the input of the postsynaptic population.\n\n\n\n\n\n","category":"method"}]
}
