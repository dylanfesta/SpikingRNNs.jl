var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SpikingRNNs","category":"page"},{"location":"#SpikingRNNs","page":"Home","title":"SpikingRNNs","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SpikingRNNs.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SpikingRNNs]","category":"page"},{"location":"#SpikingRNNs.forward_signal!-Tuple{Real, Real, SpikingRNNs.PSRate, SpikingRNNs.BaseConnection, SpikingRNNs.PSRate}","page":"Home","title":"SpikingRNNs.forward_signal!","text":"send_signal(conn::ConnectionStateRate)\n\nComputes the input to postsynaptic population, given the current state of presynaptic population. For a rate model, it applies the iofunction to the neuron potentials, gets the rate values then multiplies rates by weights, adding the result to the input of the postsynaptic population.\n\n\n\n\n\n","category":"method"},{"location":"#SpikingRNNs.lognorm_reparametrize-Tuple{Real, Real}","page":"Home","title":"SpikingRNNs.lognorm_reparametrize","text":"    lognorm_reparametrize(m,std) -> distr::LogNormal\n\nparameters\n\nm   sample mean\nstd sample std\n\n\n\n\n\n","category":"method"},{"location":"#SpikingRNNs.wmat_train_assemblies_protocol-Tuple{Integer, Integer, Real}","page":"Home","title":"SpikingRNNs.wmat_train_assemblies_protocol","text":"wmat_train_assemblies_protocol(Nneus::Integer,p::Real; scal::Float64=1.0) \n  -> (weights::SparseMatrixCSC,assembly_dictionary::Dict)\n\nArguments\n\nNpost::Integer : number of postsynaptic neurons\nNassemblies::Integer : number of assemblies to train\np_assembly::Real : probability for a neuron to be in any assembly\nscal::Real=1.0 : connection weights\n\nOutputs\n\nweights : sparse weight matrix\nassembly_list::Vector{NamedTuple{(:neupost,:neupre),Vector{Int64,Vector{Int64}}}} element i contains the pre and post neurons associated to assembly i\n\n\n\n\n\n","category":"method"}]
}
